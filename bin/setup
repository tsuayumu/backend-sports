#!/usr/bin/env ruby
require 'fileutils'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # This script is a way to setup or update your development environment automatically.
  # This script is idempotent, so that you can run it at anytime and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   FileUtils.cp 'config/database.yml.sample', 'config/database.yml'
  # end

  # puts "\n== Removing old logs and tempfiles =="
  # system! 'bin/rails log:clear tmp:clear'

  # puts "\n== insert Initialize data =="
  # system! "bin/rake db:seed"

  puts "\n== Create Database =="
  system! "bin/rails db:create"

  puts "\n== Create Table =="
  system! "bundle exec ridgepole -c config/database.yml -E production --apply -f db/Schemafile"

  # 初期セットの場合、falseにする
  skip = true

  unless skip
    puts "\n== Create League and team =="
    system! "bin/rails runner batch/init.rb"

    puts "\n== Create Batter =="
    system! "bin/rails runner batch/players.rb"

    puts "\n== Update Batter =="
    system! "bin/rails runner batch/2020/update_batter.rb"

    puts "\n== Update Pitcher =="
    system! "bin/rails runner batch/2020/update_pitcher.rb"

    puts "\n== Update Player =="
    system! "bin/rails runner batch/2020/update_players.rb"
  end

  puts "\n== Starting application server =="
  if ENV["DOCKER_ENV"]
    system! "bin/rails restart"
  else
    system! "bin/rails s -p 3001"
  end
end
